name: build
on:
  push:
    branches:
      - main
    pull_request:
      - main
jobs:
  go-generate:
    name: Generate
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      SRC_DIRS: slice utils
    strategy:
      matrix:
        go-version: [1.16, 1.17]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Generate
        run: go run -v ./codegen
      - name: Copy Generated
        run: |
          for dir in $(SRC_DIRS); do \
            (echo $dir && cd $dir && go test . -coverpkg=./... -covermode=atomic -coverprofile=./coverage.txt -v -count 1;) \
          done
  go-tests:
    name: Go Tests
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    needs:
      - go-generate
    strategy:
      matrix:
        go-version: [1.16, 1.17]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Test
        run: |
          go test ./slice/... -v -count 1
  go-bench:
    name: Go Benchmark Tests
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on
    needs:
      - go-generate
    strategy:
      matrix:
        go-version: [1.16, 1.17]
        os: ["ubuntu-latest", "ubuntu-18.04", "macos-latest"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Benchmark
        run: |
          (cd slice && go test -bench=.)
          (cd utils && go test -bench=.)
  go-sec:
    runs-on: ubuntu-latest
    needs:
      - go-generate
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-dir codegen ./...
  goreleaser:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    needs:
      - go-tests
      - go-sec
      - go-bench
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
